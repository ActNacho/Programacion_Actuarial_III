?rnorm
demo()
error.catching()
is.things
?is.things
quit()
getwd
getwd()
?norm
?rnorm
rnorm(1,0,1)
rnorm(100)
hist(rnorm(1000))
help.search("rnorm")
args(rnorm)
rnorm(10)
rnorm(10,5,9)
rnorm(100)
summary(cars)
cars
a <- available.packages()
head(a)
head(rownames(a))
tail(rawnames(a))
tail(rownames(a))
n <- signif(nrow(a))
n
install.packages("ggplot2")
installed.packages()
library(ggplot2)
?ggplot
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30))
# Compute sample mean and standard deviation in each group
ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
# Declare the data frame and common aesthetics.
# The summary data frame ds is used to plot
# larger red points in a second geom_point() layer.
# If the data = argument is not specified, it uses the
# declared data frame from ggplot(); ditto for the aesthetics.
ggplot(df, aes(x = gp, y = y)) +
geom_point() +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
# Same plot as above, declaring only the data frame in ggplot().
# Note how the x and y aesthetics must now be declared in
# each geom_point() layer.
ggplot(df) +
geom_point(aes(x = gp, y = y)) +
geom_point(data = ds, aes(x = gp, y = mean),
colour = 'red', size = 3)
# Set up a skeleton ggplot object and add layers:
ggplot() +
geom_point(data = df, aes(x = gp, y = y)) +
geom_point(data = ds, aes(x = gp, y = mean),
colour = 'red', size = 3) +
geom_errorbar(data = ds, aes(x = gp, y = mean,
ymin = mean - sd, ymax = mean + sd),
colour = 'red', width = 0.4)
install.packages("devtools")
library(datasets)
?datasets
library(help = "datasets")
data <- datasets(mtcars)
data <- datasets("mtcars)
")"
)
"")
data <- mtcars
View(data)
View(data)
data2 <- airquality
View(data2)
x <- list(aardvark = 1:5)
x$a
library(datasets)
data(airquality)
cor(airquality)
rm(ls)
rm(ls())
ls()
rm(ls)
rm(ls())
x <- 1
print(x)
x
msg <- "Hola a todos"
msg
# Prueba de Asignación de Variables
x <- 1
# Impresión forzada
print(x)
# Impresión indirecta
x
msg <- "Hola a todos"
msg
x <- # Un comentario sin sentido
1
x <- (1+2
x <- (1+2
)
x <- 1:100
x
x <- rep(c("a","b","c"),30)
x
?class
class(1)
class(1L)   # integer
class(1*1L) #
class(3+12i)
(3+12i)*(3-12i)
class((3+12i)*(3-12i))
class(TRUE)
class(TRUE*1)
class(c(1,FALSE,3L,2+4i,"a"))
a <- vector(1,FALSE,3L,2+4i,"a")
?vector
a <- vector(mode = "numeric", length = 10)
a
print(a)
Inf
1/0
1/Inf
exp(-inf)
exp(-Inf)
0/0
0*1/0
0*Inf
attributes(a)
?attributes
attributes(vector)
attributes(airquality)
a <- c(1,5,3L,2+4i,T,FALSE)
a
b <- c(a,"cadena")
b
c <- c(1,5,3L,2+4i,T,FALSE,"cadena")
c
x <- 0:6
class(X)
as.numeric(x)
as.logical(x)
as.complex(x)
as.character(x)
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
as.character(x)
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
as.character(x)
# Coerción explícita
x <- 0:6
class(x)
x
as.numeric(x)
as.logical(x)
as.complex(x)
# Coerción explícita
x <- 0:6
class(x)
as.integer(x)
as.numeric(x)
as.logical(x)
as.complex(x)
as.character(x)
as.numeric(c(3+4i,2+0i))
x <- c(F, 3L, 94.5, 2+3i, "a")
x
x <- list(F, 3L, 94.5, 2+3i, "a")
x
?matrix
x <- matrix(nrow=2, ncol=3)
x
dim(x)
attributes(x)
x <- matrix(1:6,2,3)
x
x <- matrix(data=1:6,nrow=2,ncol=3)
x
x <- matrix(data=1:6,ncol=3,nrow=2)
x
x <- matrix(1:6,2,3,TRUE)
x
x <- matrix(1:10,2,5,F)
x
x <- 1:10
dim(x)
dim(x) <- c(2,5)
x
x <- 1:10
x
dim(x) <- c(2,5)
x
x <- 1:5
y <- 11:15
z <- 21:25
cbind(x,y,z)
rbind(x,y,z)
data <- rbind(x,y,z,x,x,x,x)
data
dim(data)
data[1,]
data[2,]
data["z"]
data$z
data
x1<- c(11:14,"15")
x2<- c(21:24,"25")
x3<- c(31:34,"35")
x4<- c(41:44,"45")
x5<- c(51:54,"55")
rbind(x1,x2,x3,x4,x5)
setwd("~/GitHub/Programacion_Actuarial_III")
ls()
rm(ls)
rm(ls())
rmls
setwd("~/GitHub/Programacion_Actuarial_III")
data <- read.csv(file="table.csv")
View(data)
head(data)
head(data)
class(data)
?head
head(data,10)
tail(data,10)
tail(data,10)
y <- data.frame(a=1, b="a")
dput(y)
y
d
dput(y,file="y.R")
rm(y)
nueva.y <- dget(file="y.R")
nueva.y
x <- "Programación Actuarial III"
y <- data.frame(a=1,b="a")
x <- "Programación Actuarial III"
y <- data.frame(a=1,b="a")
dump(c(x,y),file="data.R")
dump(c("x","y"),file="data.R")
rm(x,y)
source(data.R)
source("data.R")
con <- url("http://www.fcfm.buap.mx/","r")
con <- url("http://www.fcfm.buap.mx/","r")
con <- url("http://www.fcfm.buap.mx/","r")
readLines(con,10)
con <- url("http://www.fcfm.buap.mx/","r")
readLines(con,10)
data <- read.csv(file="table.csv")
tail(head(data,1000),1)
tail(head(data,1000),1)
x <- c("a","b","c","d","e")
x
x[1]
x[2]
# Creamos un vector
x <- c("a","b","c","c","d","e")
x
# Extraemos un elemento con []
x[1]
x[2]
x[1:4]
x[x>="c"]
data[1000]
data[1000,]
u <- x == "c"
u
x[u]
x[!u]
x <- list(foo=1:4, bar=0.6)
x
x[1]
class(x[1])
x[[1]]
x[1]
x[[1]]
x[1]; class(x[1])
x[[1]]; class(x[[1]])
x$foo
x$foo[3]
x$foo[[3]]
x["bar"]
x[["bar"]]
x <- list(foo=1:4, bar=0.6, baz="Hola")
nombre <- "bar"
x[nombre]
x[[nombre]]
x$nombre
x$bar
x <- list(a=list(10,12,14), b=list(3.14,2.81))
x <- list(a=list(10,12,14), b=list(3.14,2.81))
x[[c(1,3)]]
x[c(1,3)]
x[[1]]
x[[1]][[3]]
x[[c(2,1)]]
